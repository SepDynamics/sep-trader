# SEP Trading System - DigitalOcean PostgreSQL Configuration Template
# =================================================================
# 
# This template provides the required environment variables for connecting
# to DigitalOcean managed PostgreSQL instances with SSL/TLS encryption.
#
# Instructions:
# 1. Copy this file to .sep-config.env
# 2. Replace all placeholder values with your actual DigitalOcean credentials
# 3. Ensure the SSL certificate file is downloaded and accessible
# 4. Add .sep-config.env to your .gitignore file
#
# Security Note: NEVER commit the actual .sep-config.env file to version control

# =================================================================
# DIGITALOCEAN POSTGRESQL CONFIGURATION
# =================================================================

# Primary Database Connection
DB_HOST=cluster-do-user-XXXXXXX-0.db.ondigitalocean.com
DB_PORT=25060
DB_USER=doadmin
DB_PASSWORD=your_secure_password_here
DB_NAME=defaultdb

# SSL/TLS Configuration
DB_SSL_MODE=require
DB_SSL_ROOT_CERT=./pki/digitalocean-ca-certificate.crt
DB_SSL_CERT_VERIFY=verify-full

# Connection Pool Configuration (Optional)
DB_POOL_ENABLED=true
DB_POOL_NAME=sep-trading-pool
DB_POOL_MODE=transaction
DB_POOL_SIZE=25
DB_POOL_MAX_CONNECTIONS=100

# Composite Connection Strings
DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSL_MODE}&sslrootcert=${DB_SSL_ROOT_CERT}
DATABASE_POOL_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=${DB_SSL_MODE}&sslrootcert=${DB_SSL_ROOT_CERT}&application_name=${DB_POOL_NAME}

# =================================================================
# OANDA API CONFIGURATION (Preserve existing)
# =================================================================

# OANDA Trading API Credentials
OANDA_ACCESS_TOKEN=your_oanda_access_token_here
OANDA_ACCOUNT_ID=your_oanda_account_id_here
OANDA_ENVIRONMENT=practice
OANDA_API_BASE_URL=https://api-fxtrade.oanda.com

# =================================================================
# VALKEY/REDIS DATASTORE CONFIGURATION
# =================================================================

# Valkey Server Connection
VALKEY_HOST=localhost
VALKEY_PORT=6380
VALKEY_PASSWORD=your_valkey_password_here
VALKEY_DB_INDEX=0
VALKEY_URL=redis://:${VALKEY_PASSWORD}@${VALKEY_HOST}:${VALKEY_PORT}/${VALKEY_DB_INDEX}

# Cache Configuration (C++ components)
SEP_CACHE_HOST=localhost
SEP_CACHE_PORT=6380
SEP_CACHE_PASSWORD=your_valkey_password_here

# Redis URL for Python scripts
REDIS_URL=redis://:${SEP_CACHE_PASSWORD}@${SEP_CACHE_HOST}:${SEP_CACHE_PORT}/0

# Connection Pool Settings
VALKEY_MAX_CONNECTIONS=20
VALKEY_CONNECTION_TIMEOUT=5000
VALKEY_RECONNECT_ATTEMPTS=3

# =================================================================
# BUILD SYSTEM CONFIGURATION
# =================================================================

# Compiler and Build Environment
SEP_WORKSPACE_PATH=/sep
SEP_GCC_PATH=/usr/bin
CUDA_HOME=/usr/local/cuda-12.6

# Directory Structure (Environment-specific paths)
SEP_CACHE_DIR=${SEP_WORKSPACE_PATH}/cache
SEP_CONFIG_DIR=${SEP_WORKSPACE_PATH}/config
SEP_LOG_DIR=${SEP_WORKSPACE_PATH}/logs
SEP_LIB_PATH=${CMAKE_BINARY_DIR}/lib

# =================================================================
# SYSTEM CONFIGURATION
# =================================================================

# Environment Designation
ENVIRONMENT=development
LOG_LEVEL=INFO
DEBUG_ENABLED=false

# Security Configuration
ENCRYPTION_KEY=your_encryption_key_here
JWT_SECRET=your_jwt_secret_here

# Performance Tuning
MAX_CONCURRENT_CONNECTIONS=50
CONNECTION_TIMEOUT=30
QUERY_TIMEOUT=300

# =================================================================
# MONITORING AND LOGGING
# =================================================================

# Database Connection Monitoring
DB_CONNECTION_HEALTH_CHECK=true
DB_CONNECTION_RETRY_ATTEMPTS=3
DB_CONNECTION_RETRY_DELAY=5000

# Logging Configuration
DB_QUERY_LOGGING=false
DB_SLOW_QUERY_THRESHOLD=1000
DB_CONNECTION_LOGGING=true

# =================================================================
# BACKUP AND RECOVERY
# =================================================================

# Backup Configuration (if using custom backup scripts)
BACKUP_ENABLED=false
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_RETENTION_DAYS=30

# =================================================================
# DEVELOPMENT OVERRIDES
# =================================================================

# Development-specific settings (comment out for production)
# DB_SSL_MODE=prefer
# DEBUG_SQL_QUERIES=true
# VERBOSE_LOGGING=true

# Development Build Configuration
# SEP_GCC_PATH=/opt/gcc-14/bin
# SEP_CACHE_DIR=/tmp/sep-dev-cache
# SEP_LOG_DIR=/tmp/sep-dev-logs
# VALKEY_HOST=localhost
# VALKEY_PORT=6380

# Production Build Configuration (uncomment for production)
# SEP_CONFIG_DIR=/etc/sep/config
# SEP_LOG_DIR=/var/log/sep
# SEP_LIB_PATH=/usr/local/lib/sep
# VALKEY_HOST=valkey.production.internal
# VALKEY_PORT=6379

# =================================================================
# VALIDATION SETTINGS
# =================================================================

# Connection validation queries
DB_VALIDATION_QUERY=SELECT 1
DB_VALIDATION_TIMEOUT=5

# Health check endpoints
HEALTH_CHECK_DB_TIMEOUT=10
HEALTH_CHECK_ENABLED=true